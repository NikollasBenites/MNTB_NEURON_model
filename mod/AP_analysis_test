import numpy as np
from scipy.signal import find_peaks
import matplotlib.pyplot as plt
import myFunctions as mFun


# Example: Generate a test voltage trace (replace with your real data)
time = np.linspace(0, 50, 5000)  # Time in ms
voltage = -70 + 40 * np.exp(-((time - 25) / 2)**2)  # Simulated AP at 25 ms

# Call the AP analysis function
ap_data = mFun.analyze_AP(time, voltage)

# Print results
if ap_data:
    print("First AP Analysis:")
    for key, value in ap_data.items():
        print(f"{key}: {value:.2f}")

    # Plot the trace with AP features
    plt.figure(figsize=(8, 4))
    plt.plot(time, voltage, label="Voltage Trace", color='black')
    plt.scatter(ap_data["spike_time"], ap_data["peak"], color='red', label="Peak", zorder=3)
    plt.scatter(time[np.where(voltage == ap_data["threshold"])[0][0]], ap_data["threshold"], color='blue', label="Threshold", zorder=3)
    plt.axhline(ap_data["AHP"], color='purple', linestyle="--", label="AHP", alpha=0.7)

    plt.xlabel("Time (ms)")
    plt.ylabel("Voltage (mV)")
    plt.legend()
    plt.title("Action Potential Analysis")
    plt.show()
else:
    print("No AP detected in this trace.")